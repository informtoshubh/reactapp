{"version":3,"sources":["logo.svg","components/Msg.js","components/Shubham.js","components/Time.js","components/Cards.js","components/Sdata.js","components/ToDo.js","components/Form.js","components/ChangeColor.js","components/Clock.js","components/Like.js","components/Pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["currdate","Date","getHours","msg","Msg","Shubham","tdate","getDate","tmonth","getMonth","tyear","getFullYear","Time","Cards","props","className","src","imgsrc","alt","cardtitle","cardtext","href","cardlink","target","Sdata","id","ToDo","onClick","delete","itemValue","Form","useState","fname","lname","email","fullName","setFullName","inputEvent","event","name","value","preValue","onSubmit","preventDefault","type","placeholder","onChange","ChangeColor","style","background","oldBg","newBg","newName","Clock","time","newTime","Like","iCount","iNum","Pokemon","num","setNum","setName","moves","setMoves","useEffect","a","axios","get","res","console","log","data","length","getData","App","count","setCount","toLocaleTimeString","cTime","setTime","GetTime","setInterval","Bg","setBg","inputList","setInputList","Items","setItems","deleteItems","oldItems","filter","arrElement","index","map","val","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ddaece.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\n\r\nlet currdate = new Date();\r\ncurrdate = currdate.getHours();\r\n\r\nlet msg = \"\";\r\n\r\nif(currdate>=0 && currdate<12)\r\n{\r\n  msg = \"Good Morning !\";\r\n}\r\nelse if(currdate>=12 && currdate<19)\r\n{\r\n  msg = \"Good Afternoon !\";\r\n}\r\nelse{\r\n  msg = \"Good Night !\";\r\n}\r\n\r\nfunction Msg() {\r\n    return (\r\n        <>\r\n        <h2>Hello Sir, {msg} </h2>\r\n        </>\r\n    );\r\n}\r\nexport default Msg;","import React from 'react';\r\n\r\nlet name = \"Shubham Verma\";\r\n\r\nfunction Shubham(){\r\n    return(\r\n    <>\r\n    <h1>First React App by {name}</h1>\r\n    </>\r\n    );\r\n}\r\nexport default Shubham;","import React from 'react';\r\n\r\nlet tdate = new Date();\r\ntdate = tdate.getDate();\r\n\r\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nlet tmonth = new Date();\r\ntmonth = month[tmonth.getMonth()];\r\n\r\n\r\nlet tyear = new Date();\r\ntyear = tyear.getFullYear();\r\n\r\n\r\nfunction Time(){\r\n    return(\r\n    <>\r\n    <h2>Today's Date : {tdate} / {tmonth} / {tyear}</h2>\r\n    </>\r\n    );\r\n}\r\nexport default Time;","import React from 'react';\r\n\r\nfunction Cards(props){\r\n    return(\r\n    <>\r\n    <div className=\"card\">\r\n        <img src={props.imgsrc} className=\"card-img-top\" alt=\"Wallpapers\"/> \r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{props.cardtitle}</h5>\r\n            <p className=\"card-text\">{props.cardtext}</p>\r\n            <a href={props.cardlink} className=\"btn btn-primary\" target=\"_blank\">Watch More</a>\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\nexport default Cards;","const Sdata = [\r\n    {   \r\n        id:1,\r\n        imgsrc:\"https://images.pexels.com/photos/3770317/pexels-photo-3770317.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n        cardtitle:\"Dark\",\r\n        cardtext:\"Click the below button for more wallpapers.\",\r\n        cardlink:\"https://www.pexels.com/search/top%20model/\"\r\n    },\r\n    {   \r\n        id:2,\r\n        imgsrc:\"https://images.pexels.com/photos/3770317/pexels-photo-3770317.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n        cardtitle:\"Light\",\r\n        cardtext:\"Click the below button for more wallpapers.\",\r\n        cardlink:\"https://www.pexels.com/search/top%20model/\"\r\n    },\r\n    {\r\n        id:3,\r\n        imgsrc:\"https://images.pexels.com/photos/3770317/pexels-photo-3770317.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n        cardtitle:\"Red\",\r\n        cardtext:\"Click the below button for more wallpapers.\",\r\n        cardlink:\"https://www.pexels.com/search/top%20model/\"\r\n    },\r\n    {   \r\n        id:4,\r\n        imgsrc:\"https://images.pexels.com/photos/3770317/pexels-photo-3770317.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n        cardtitle:\"Black\",\r\n        cardtext:\"Click the below button for more wallpapers.\",\r\n        cardlink:\"https://www.pexels.com/search/top%20model/\"\r\n    }\r\n]\r\n\r\nexport default Sdata;","const ToDo = (props) =>{\r\n\r\n    return (\r\n        <>\r\n        <div className=\"todo_style\"> \r\n            <button\r\n            className=\"fa fa-items\"\r\n            area-hidden=\"true\" \r\n            onClick={()=>{\r\n                props.delete(props.id);\r\n            }}\r\n            >*\r\n            </button> \r\n            <li>{props.itemValue}</li>\r\n            </div>    \r\n        </>\r\n    )\r\n}\r\nexport default ToDo;","import React, {useState} from 'react';\r\n\r\nconst Form = () => {\r\n    \r\n    const [fullName, setFullName] = useState({\r\n        fname : \"\",\r\n        lname : \"\",\r\n        email :\"\",\r\n      });\r\n    \r\n    const inputEvent = (event) =>{\r\n    \r\n    const {name,value} = event.target;\r\n        \r\n    setFullName((preValue)=>{\r\n    return{\r\n        ...preValue,\r\n        [name] : value,\r\n        } \r\n    })\r\n    }\r\n    \r\n    const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"center_div\">\r\n        <form onSubmit={onSubmit}>\r\n        <h1>Hello {fullName.fname} {fullName.lname}</h1>\r\n        <p>{fullName.email}</p>\r\n            <input type=\"text\" placeholder=\"Enter the first name\" name=\"fname\" value={fullName.fname} onChange={inputEvent}></input><br></br>\r\n            <input type=\"text\" placeholder=\"Enter the second name\" name=\"lname\" value={fullName.lname} onChange={inputEvent}></input><br></br>\r\n            <input type=\"text\" placeholder=\"Enter your email\" name=\"email\" value={fullName.email} onChange={inputEvent}></input><br></br><br></br>\r\n            <button type=\"submit\">Sumbmit</button>\r\n          </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst ChangeColor = (props) => {\r\n    return (\r\n        <div className=\"divbox\" style={{background:props.oldBg}}>\r\n        <button onClick={props.newBg}>{props.newName}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ChangeColor;","import React from 'react';\r\n\r\nconst Clock = (props) => {\r\n    return(\r\n      <>\r\n      <h1>🕙{props.time}</h1>\r\n      <button onClick={props.newTime}>Get Time</button>\r\n      </>\r\n    )\r\n}\r\nexport default Clock;","import React from 'react';\r\n\r\nconst Like = (props)=> {\r\n    return(\r\n        <>\r\n        <h1>👍{props.iCount}</h1>\r\n        <button onClick={props.iNum}>Like</button>\r\n        </>\r\n    )\r\n}\r\nexport default Like;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport axios from 'axios';\r\n\r\nconst Pokemon = () => {\r\n    const [num, setNum] = useState();\r\n    const [name, setName] = useState(); \r\n    const [moves, setMoves] = useState();\r\n    \r\n    useEffect(()=>{\r\n        async function getData(){\r\n            const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`); \r\n            console.log(res.data.name);\r\n            setName(res.data.name);\r\n            setMoves(res.data.moves.length);\r\n        };\r\n        getData();      \r\n    },[`${num}`]);\r\n    return (\r\n        <>\r\n            <h1>You choose {num} </h1>\r\n            <h2>Name:  {name} </h2>\r\n            <h2>Moves: {moves} </h2>\r\n            <select value={num} onChange={(event)=>{\r\n                setNum(event.target.value);\r\n            }}>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n            </select>\r\n        </>\r\n        );\r\n}\r\nexport default Pokemon;\r\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Msg from './components/Msg';\nimport Shubham from './components/Shubham';\nimport Time from './components/Time';\nimport Cards from './components/Cards';\nimport Sdata from './components/Sdata';\nimport ToDo from './components/ToDo';\nimport Form from './components/Form';\nimport ChangeColor from './components/ChangeColor';\nimport Clock from './components/Clock';\nimport Like from './components/Like';\nimport Pokemon from './components/Pokemon';\n\n\nfunction App() {\n\n  /*Like Code Start*/\n  const [count, setCount] = useState(0);\n  const IncNum = () => {\n  setCount(count +1);\n  }\n  /*Like Code End*/\n\n  /*Clock Code Start*/\n  let newTime = new Date().toLocaleTimeString();\n  const [cTime, setTime] = useState(newTime);\n  \n  const GetTime = () => {\n    let cTime = new Date().toLocaleTimeString();\n    setTime(cTime);\n  }\n  setInterval(GetTime,1000)\n  /*Clock Code End*/\n\n  /*Change Color Code Start*/\n  let bname = \"🐭 click me\";\n  let background = \"#fff\";\n  const [Bg, setBg] = useState(background);\n  const [name, setName] = useState(bname);\n\n  const changeBg = () => {\n  let cBg = \"#8e44ad\";\n  let cname = \"📸flashed\";\n  setBg(cBg);\n  setName(cname);\n }\n/*Change Color Code End*/\n\n/*ToDo Code*/\nconst [inputList, setInputList] = useState(\"\");\n    const[Items, setItems] = useState([]);\n    const itemEvent = (event) => {\n        setInputList(event.target.value);\n       }\n    const listOfItems = (event) => {\n        setItems((oldItems) => {\n            return[...oldItems, inputList];\n        })\n        setInputList(\"\");\n    }\n    const deleteItems = (id) =>{\n      console.log(\"deleted\");\n      setItems((oldItems) => {\n        return oldItems.filter((arrElement,index)=>{\n           return index !== id;\n        })\n    })\n  }\n/*ToDo Code End*/\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Msg />\n        <Shubham />\n        <Time/>\n        <button onClick={GetTime}>Get Time</button>\n        {Sdata.map((val)=>{\n          return(\n            <Cards\n              key={val.id}\n              imgsrc={val.imgsrc}\n              cardtitle={val.cardtitle}\n              cardtext={val.cardtext}\n              cardlink={val.cardlink}\n            />\n          );\n        })}\n        <Like iNum={IncNum} iCount={count}/>\n\n        <Clock time={cTime} newTime ={GetTime}/>\n\n        <ChangeColor newBg={changeBg} newName={name} oldBg={Bg}/>\n        \n        <Form/>        \n        \n        <h1>To Do List Project</h1>\n          <div className=\"main_div\">\n              <div className=\"center_div\">\n              <h1 className=\"main_heading\">ToDoList</h1>\n              <input type=\"text\" placeholder=\"Add a item\" value={inputList} onChange={itemEvent}/>\n              <button className=\"main_button\" onClick={listOfItems}>+</button>\n          <ol>\n            {Items.map((itemval, index)=>{\n            return(\n            <ToDo \n            key={index}\n            id = {index}\n            itemValue={itemval}\n            delete={deleteItems}\n            />\n            );\n            })}\n          </ol>\n          </div>\n        </div>\n        <Pokemon/>\n      </header>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}